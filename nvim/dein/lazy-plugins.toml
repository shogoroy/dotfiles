[[plugins]]
repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'lambdalisue/vim-findent'

[[plugins]]
repo = 'APZelos/blamer.nvim'
on_event = []
hook_source = '''
let g:blamer_enabled = 1
let g:blamer_date_format = '%Y/%m/%d %H:%M'
'''

[[plugins]]
repo = 'github/copilot.vim'
on_ft = [
  'javascript', 'javascript.jsx', 'javascriptreact',
  'typescript', 'typescriptreact',
  'html', 'tt2html',
  'css', 'sass', 'scss'

  'go',
  'yaml',
]
hook_source = '''
autocmd BufRead,BufNewFile * Copilot enable
'''


[[plugins]] # CopilotChat (for curl, log wrapper) に必要
repo = 'nvim-lua/plenary.nvim'
on_ft = [
  'javascript', 'javascript.jsx', 'javascriptreact',
  'typescript', 'typescriptreact',
  'html', 'tt2html',
  'css', 'sass', 'scss'

  'go',
  'yaml',
]


[[plugins]] # CopilotChat
repo = 'CopilotC-Nvim/CopilotChat.nvim'
depends = ['copilot.vim', 'plenary.nvim']
branch = 'main'
on_ft = [
  'javascript', 'javascript.jsx', 'javascriptreact',
  'typescript', 'typescriptreact',
  'html', 'tt2html',
  'css', 'sass', 'scss'

  'go',
  'yaml',
]
rev = 'main'
lua_source = '''
require('rc.copilot')
'''


#
# Frontend
#
[[plugins]]
repo = 'norcalli/nvim-colorizer.lua'
on_ft = [
  'javascript', 'javascript.jsx', 'javascriptreact',
  'typescript', 'typescriptreact',
  'html', 'tt2html',
  'css', 'sass', 'scss'
]
hook_source = '''
set termguicolors
'''

#
# fzf
#

[[plugins]]
repo = "junegunn/fzf"
build = './install --bin'

[[plugins]]
repo = "junegunn/fzf.vim"
depends = ["fzf"]

#
# vue
#
[[plugins]]
repo = 'posva/vim-vue'
on_ft = ['vue']

#
# prettier
#

[[plugins]]
repo = 'prettier/vim-prettier'
build = 'npm install'
on_ft = ['less', 'scss', 'json', 'graphql', 'markdown', 'yaml']
hook_source = '''
let g:prettier#autoformat = 0
autocmd BufWritePre *.less,*.scss,*.json,*.graphql,*.md,*.yaml PrettierAsync
'''

#
# toml
#

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

#
# markdown
#

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']
hook_source = '''
autocmd BufRead,BufNewFile *.mkd  set filetype=markdown
autocmd BufRead,BufNewFile *.md  set filetype=markdown
" Need: kannokanno/previm
nnoremap <silent> <C-p> :PrevimOpen<CR> " Ctrl-pでプレビュー
" 自動で折りたたまないようにする
let g:vim_markdown_folding_disabled=1
'''

[[plugins]]
repo = 'kannokanno/previm'
on_ft = ['markdown']
hook_source = '''
let g:previm_open_cmd = 'open -a Google\ Chrome'
'''

#
# javascript
#

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript']
hook_source = '''
let g:javascript_plugin_jsdoc = 1
'''

[[plugins]]
repo = 'jelera/vim-javascript-syntax'
on_ft = ['javascript', 'javascript.jsx', 'javascriptreact']

#
# typescript
#

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript', 'typescriptreact']

[[plugins]]
repo = 'MaxMEllon/vim-jsx-pretty'
on_ft = ['javascriptreact', 'typescriptreact']
hook_source= '''
hi jsxComponentName guifg=lightcyan
hi jsxTagName guifg=lightskyblue

hi jsxPunct guifg=lightskyblue
hi jsxCloseString guifg=lightskyblue
'''

#
# go
#

#
# perl
#
[[plugins]]
repo = 'vim-perl/vim-perl'
on_ft = ['perl']

#
# sql
#

[[plugins]]
repo = 'vim-scripts/dbext.vim'
on_ft = ['sql']

#
# firestore
#

[[plugins]]
repo = 'delphinus/vim-firestore'
on_ft = ['firestore']

#
# plantuml
#

[[plugins]]
repo = 'aklt/plantuml-syntax'
on_ft = ['plantuml']
hook_source = '''
au FileType plantuml command! OpenUml :!open -a Google\ Chrome %
nnoremap <silent> <C-p> :OpenUml<CR>
'''

#
# nginx
#
[[plugins]]
repo = 'chr4/nginx.vim'
on_ft = ['nginx']
